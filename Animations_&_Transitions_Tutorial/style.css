/* For Animations, we use "keyframes" and are defined at the TOP OF THE STYLESHEETS */
@keyframes fade-in {    
    /* In the beginning of the animation... */
    0% {
        opacity: 0;
        transform: translateY(30px);    /* In the beginning, shift the card 30px below from bottom. */
    }

    /* In the end of the animation... */
    100% {
        opacity: 1;
        transform: translateY(0);   /* Card should come back at it's original position! */
    }
}   /* These are just the steps, in order to use it, we need to apply it to the element! */

/* The * selector is a Universal Selector, targets all elements on the page */
* {
    margin: 0;
    padding: 0;
    /* box-sizing: border-box; */
}

body {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.card-div {
    display: inline-block;
    border: 4px solid black;
    border-radius: 15px;
    width: fit-content;
    overflow: hidden;   /* Whatever content overflows inside it, just hide it! */

    /* transform: rotate(90deg) => to rotate by 90 degrees! */
    /* transform: translateX(-300px); => to shift by 300px to the left! */
    /* transform: scale(1.2);   => 1 is default, 1.2 is making it bigger! */

    /* transition: transform 0.5s box-shadow 0.5s; */  /* => below is the alternative of this line! */
    transition: all 0.4s;

    /* INTRO Animation... */
    /* animation: fade-in 1s 1.5s backwards;   wait for 1.5 second(which is DELAY) and then do the animation */
    animation: fade-in 1s ease-in-out;
    /* 
        What will backwards do?
        It will consider, the beginning property value (as defined in the first @keyframes at-rule) and is applied "before the animation is displayed", during the period defined by 'animation delay'.
    */

    /*
        Above is the shorthand property!
        We can even write...
            animation-name: fade-in;
            animation-duration: 1s;
            animation-delay: 1.5s;
            animation-fill-mode: backwards;
    */

}

.card-div:hover {
    transform: scale(1.05); /* scale it up by 5% */
    box-shadow: 9px 9px 0 rgba(0, 0, 0, 1);
}

#SF-image {
    height: 400px;
    width: 355px;
    border-bottom: 3px solid black;
    object-fit: cover;
}

.about-image-div {
    font-family: Helvetica, sans-serif;

    display: flex;
    align-items: center;
    justify-content: space-between;

    width: 355px;
}

.image-info-div {
    padding: 3.5% 5.5%;
}

.location-div {
    font-size: 1.3em;
    font-weight: 600;
}

.additional-info-div {
    font-size: 1.2em;
    padding: 5px 0;
    color: rgb(135, 135, 135);
}

#like-button {
    width: 30px;
    margin: 0 auto;
    /* padding: 2px; */
}